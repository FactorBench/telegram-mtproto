{"version":3,"sources":["../src/worker.js"],"names":["console","info","runTask","data","task","bytes","x","y","m","keyBytes","ivBytes","encryptedBytes","Error","onmessage","e","taskID","result","postMessage"],"mappings":";;AAAA;;AAGAA,QAAQC,IAAR,CAAa,0BAAb;;AAEA,IAAMC,UAAUC,QAAQ;AACtB,UAAQA,KAAKC,IAAb;AACE,SAAK,WAAL;AAAoB,aAAO,+BAAqBD,KAAKE,KAA1B,CAAP;AACpB,SAAK,SAAL;AAAoB,aAAO,sBAAYF,KAAKG,CAAjB,EAAoBH,KAAKI,CAAzB,EAA4BJ,KAAKK,CAAjC,CAAP;AACpB,SAAK,WAAL;AAAoB,aAAO,uBAAaL,KAAKE,KAAlB,CAAP;AACpB,SAAK,aAAL;AAAoB,aAAO,yBAAeF,KAAKE,KAApB,EAA2BF,KAAKM,QAAhC,EAA0CN,KAAKO,OAA/C,CAAP;AACpB,SAAK,aAAL;AAAoB,aAAO,yBAAeP,KAAKQ,cAApB,EACeR,KAAKM,QADpB,EAC8BN,KAAKO,OADnC,CAAP;AAEpB;AACE,YAAM,IAAIE,KAAJ,CAAW,iBAAgBT,KAAKC,IAAK,EAArC,CAAN;AARJ;AAUD,CAXD;;AAaAS,YAAY,UAASC,CAAT,EAAY;AACtB,MAAIA,EAAEX,IAAF,KAAW,EAAf,EAAmB;AACjBH,YAAQC,IAAR,CAAa,mBAAb;AACD,GAFD,MAEO,IAAI,OAAOa,EAAEX,IAAT,KAAkB,QAAtB,EAAgC;AACrCH,YAAQC,IAAR,CAAa,4BAAb,EAA2Ca,EAAEX,IAA7C;AACD,GAFM,MAEA;AACL,QAAMY,SAASD,EAAEX,IAAF,CAAOY,MAAtB;AACA,QAAMC,SAASd,QAAQY,EAAEX,IAAV,CAAf;AACAc,gBAAY,EAAEF,MAAF,EAAUC,MAAV,EAAZ;AACD;AACF,CAVD;;AAYAC,YAAY,OAAZ","file":"worker.js","sourcesContent":["import { pqPrimeFactorization, bytesModPow, sha1HashSync,\n  aesEncryptSync, aesDecryptSync } from './bin'\n\nconsole.info('Crypto worker registered')\n\nconst runTask = data => {\n  switch (data.task) {\n    case 'factorize'  : return pqPrimeFactorization(data.bytes)\n    case 'mod-pow'    : return bytesModPow(data.x, data.y, data.m)\n    case 'sha1-hash'  : return sha1HashSync(data.bytes)\n    case 'aes-encrypt': return aesEncryptSync(data.bytes, data.keyBytes, data.ivBytes)\n    case 'aes-decrypt': return aesDecryptSync(data.encryptedBytes,\n                                              data.keyBytes, data.ivBytes)\n    default:\n      throw new Error(`Unknown task: ${data.task}`)\n  }\n}\n\nonmessage = function(e) {\n  if (e.data === '') {\n    console.info('empty crypto task')\n  } else if (typeof e.data === 'string') {\n    console.info('crypto task string message', e.data)\n  } else {\n    const taskID = e.data.taskID\n    const result = runTask(e.data)\n    postMessage({ taskID, result })\n  }\n}\n\npostMessage('ready')"]}