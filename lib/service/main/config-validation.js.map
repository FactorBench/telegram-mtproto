<<<<<<< HEAD
{"version":3,"sources":["../../../src/service/main/config-validation.js"],"names":["type","func","typeof","num","str","bool","obj","app","properties","publicKeys","uniqueItems","storage","required","get","set","remove","clear","additionalProperties","api","invokeWithLayer","layer","initConnection","api_id","device_model","system_version","app_version","lang_code","platform","dc","id","host","port","server","dev","webogram","dcList","items","schema","mtSchema","ajv","Ajv","validate","compile","configValidator","config","valid","console","log","errors","map","printObj","Error","canDir","Function","arg","dir","colors"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,OAAO;AACXC,QAAM,EAAEC,QAAQ,UAAV,EADK;AAEXC,OAAM,EAAEH,MAAM,QAAR,EAFK;AAGXI,OAAM,EAAEJ,MAAM,QAAR,EAHK;AAIXK,QAAM,EAAEL,MAAM,SAAR,EAJK;AAKXM,OAAM,EAAEN,MAAM,QAAR;AALK,CAAb;;AAQA,IAAMO,MAAM;AACVP,QAAY,QADF;AAEVQ,cAAY;AACVC,gBAAY;AACVT,YAAa,OADH;AAEVU,mBAAa;AAFH,KADF;AAKVC,aAAS;AACPX,YAAY,QADL;AAEPY,gBAAY,CAAC,KAAD,EAAQ,KAAR,EAAe,QAAf,EAAyB,OAAzB,CAFL;AAGPJ,kBAAY;AACVK,aAAQb,KAAKC,IADH;AAEVa,aAAQd,KAAKC,IAFH;AAGVc,gBAAQf,KAAKC,IAHH;AAIVe,eAAQhB,KAAKC;AAJH,OAHL;AASPgB,4BAAsB;AATf;AALC,GAFF;AAmBVA,wBAAsB;AAnBZ,CAAZ;;AAsBA,IAAMC,MAAM;AACVlB,QAAY,QADF;AAEVY,YAAY,CAAC,OAAD,EAAU,QAAV,CAFF;AAGVJ,cAAY;AACVW,qBAAiBnB,KAAKG,GADZ;AAEViB,WAAiBpB,KAAKG,GAFZ;AAGVkB,oBAAiBrB,KAAKG,GAHZ;AAIVmB,YAAiBtB,KAAKG,GAJZ;AAKVoB,kBAAiBvB,KAAKI,GALZ;AAMVoB,oBAAiBxB,KAAKI,GANZ;AAOVqB,iBAAiBzB,KAAKI,GAPZ;AAQVsB,eAAiB1B,KAAKI,GARZ;AASVuB,cAAiB3B,KAAKI;AATZ,GAHF;AAcVa,wBAAsB;AAdZ,CAAZ;;AAiBA,IAAMW,KAAK;AACT5B,QAAY,QADH;AAETY,YAAY,CAAC,IAAD,EAAO,MAAP,CAFH;AAGTJ,cAAY;AACVqB,QAAM7B,KAAKG,GADD;AAEV2B,UAAM9B,KAAKI,GAFD;AAGV2B,UAAM/B,KAAKG;AAHD,GAHH;AAQTc,wBAAsB;AARb,CAAX;;AAWA,IAAMe,SAAS;AACbhC,QAAY,QADC;AAEbQ,cAAY;AACVyB,SAAUjC,KAAKK,IADL;AAEV6B,cAAUlC,KAAKK,IAFL;AAGV8B,YAAU;AACRnC,YAAa,OADL;AAERU,mBAAa,IAFL;AAGR0B,aAAaR;AAHL;AAHA,GAFC;AAWbX,wBAAsB;AAXT,CAAf;;AAcA,IAAMoB,SAAS;AACb7B,cAAY;AACVD,OADU;AAEVW,OAFU;AAGVc,UAHU;AAIVK,YAAUrC,KAAKM,GAJL;AAKVgC,cAAUtC,KAAKM;AALL,GADC;AAQbW,wBAAsB;AART,CAAf;;AAWA,IAAMsB,MAAM,IAAIC,aAAJ,EAAZ;AACA,sBAAQD,GAAR;AACA,IAAME,WAAWF,IAAIG,OAAJ,CAAYL,MAAZ,CAAjB;;AAEA,IAAMM,kBAAkBC,UAAU;AAChC,MAAMC,QAAQJ,SAASG,MAAT,CAAd;AACA,MAAI,CAACC,KAAL,EAAY;AACVC,YAAQC,GAAR,CAAY,eAAZ;AACAN,aAASO,MAAT,CAAgBC,GAAhB,CAAoBC,QAApB;AACA,UAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AACD;AACF,CAPD;;AASA,IAAMC,SAAS,sBAAOC,QAAP,EAAiB,KAAjB,EAAwBP,OAAxB,CAAf;AACA,IAAMI,WAAWE,SACZE,GAAD,IAASR,QAAQS,GAAR,CAAaD,GAAb,EAAkB,EAAEE,QAAQ,IAAV,EAAlB,CADI,GAEZF,GAAD,IAASR,QAAQC,GAAR,CAAYO,GAAZ,CAFb;;kBAKeX,e","file":"config-validation.js","sourcesContent":["import Ajv from 'ajv'\nimport AjvKeys from 'ajv-keywords/keywords/typeof'\nimport propIs from 'ramda/src/propIs'\n\nconst type = {\n  func: { typeof: 'function' },\n  num : { type: 'number' },\n  str : { type: 'string' },\n  bool: { type: 'boolean' },\n  obj : { type: 'object' }\n}\n\nconst app = {\n  type      : 'object',\n  properties: {\n    publicKeys: {\n      type       : 'array',\n      uniqueItems: true,\n    },\n    storage: {\n      type      : 'object',\n      required  : ['get', 'set', 'remove', 'clear'],\n      properties: {\n        get   : type.func,\n        set   : type.func,\n        remove: type.func,\n        clear : type.func\n      },\n      additionalProperties: true\n    }\n  },\n  additionalProperties: false\n}\n\nconst api = {\n  type      : 'object',\n  required  : ['layer', 'api_id'],\n  properties: {\n    invokeWithLayer: type.num,\n    layer          : type.num,\n    initConnection : type.num,\n    api_id         : type.num,\n    device_model   : type.str,\n    system_version : type.str,\n    app_version    : type.str,\n    lang_code      : type.str,\n    platform       : type.str\n  },\n  additionalProperties: false\n}\n\nconst dc = {\n  type      : 'object',\n  required  : ['id', 'host'],\n  properties: {\n    id  : type.num,\n    host: type.str,\n    port: type.num\n  },\n  additionalProperties: false\n}\n\nconst server = {\n  type      : 'object',\n  properties: {\n    dev     : type.bool,\n    webogram: type.bool,\n    dcList  : {\n      type       : 'array',\n      uniqueItems: true,\n      items      : dc\n    }\n  },\n  additionalProperties: false\n}\n\nconst schema = {\n  properties: {\n    app,\n    api,\n    server,\n    schema  : type.obj,\n    mtSchema: type.obj\n  },\n  additionalProperties: false\n}\n\nconst ajv = new Ajv()\nAjvKeys(ajv)\nconst validate = ajv.compile(schema)\n\nconst configValidator = config => {\n  const valid = validate(config)\n  if (!valid) {\n    console.log('config errors')\n    validate.errors.map(printObj)\n    throw new Error('wrong config fields')\n  }\n}\n\nconst canDir = propIs(Function, 'dir', console)\nconst printObj = canDir\n  ? (arg) => console.dir( arg, { colors: true })\n  : (arg) => console.log(arg)\n\n\nexport default configValidator"]}
=======
{"version":3,"sources":["../../../src/service/main/config-validation.js"],"names":["type","func","typeof","num","str","bool","obj","app","properties","publicKeys","uniqueItems","storage","required","get","set","remove","clear","additionalProperties","api","invokeWithLayer","layer","flags","initConnection","api_id","device_model","system_version","app_version","system_lang_code","lang_pack","lang_code","dc","id","host","port","server","dev","webogram","dcList","items","schema","mtSchema","ajv","Ajv","validate","compile","configValidator","config","valid","console","log","errors","map","printObj","Error","canDir","Function","arg","dir","colors"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,OAAO;AACXC,QAAM,EAAEC,QAAQ,UAAV,EADK;AAEXC,OAAM,EAAEH,MAAM,QAAR,EAFK;AAGXI,OAAM,EAAEJ,MAAM,QAAR,EAHK;AAIXK,QAAM,EAAEL,MAAM,SAAR,EAJK;AAKXM,OAAM,EAAEN,MAAM,QAAR;AALK,CAAb;;AAQA,IAAMO,MAAM;AACVP,QAAY,QADF;AAEVQ,cAAY;AACVC,gBAAY;AACVT,YAAa,OADH;AAEVU,mBAAa;AAFH,KADF;AAKVC,aAAS;AACPX,YAAY,QADL;AAEPY,gBAAY,CAAC,KAAD,EAAQ,KAAR,EAAe,QAAf,EAAyB,OAAzB,CAFL;AAGPJ,kBAAY;AACVK,aAAQb,KAAKC,IADH;AAEVa,aAAQd,KAAKC,IAFH;AAGVc,gBAAQf,KAAKC,IAHH;AAIVe,eAAQhB,KAAKC;AAJH,OAHL;AASPgB,4BAAsB;AATf;AALC,GAFF;AAmBVA,wBAAsB;AAnBZ,CAAZ;;AAsBA,IAAMC,MAAM;AACVlB,QAAY,QADF;AAEVY,YAAY,CAAC,OAAD,EAAU,QAAV,CAFF;AAGVJ,cAAY;AACVW,qBAAkBnB,KAAKG,GADb;AAEViB,WAAkBpB,KAAKG,GAFb;AAGVkB,WAAkBrB,KAAKG,GAHb;AAIVmB,oBAAkBtB,KAAKG,GAJb;AAKVoB,YAAkBvB,KAAKG,GALb;AAMVqB,kBAAkBxB,KAAKI,GANb;AAOVqB,oBAAkBzB,KAAKI,GAPb;AAQVsB,iBAAkB1B,KAAKI,GARb;AASVuB,sBAAkB3B,KAAKI,GATb;AAUVwB,eAAkB5B,KAAKI,GAVb;AAWVyB,eAAkB7B,KAAKI;AAXb,GAHF;AAgBVa,wBAAsB;AAhBZ,CAAZ;;AAmBA,IAAMa,KAAK;AACT9B,QAAY,QADH;AAETY,YAAY,CAAC,IAAD,EAAO,MAAP,CAFH;AAGTJ,cAAY;AACVuB,QAAM/B,KAAKG,GADD;AAEV6B,UAAMhC,KAAKI,GAFD;AAGV6B,UAAMjC,KAAKG;AAHD,GAHH;AAQTc,wBAAsB;AARb,CAAX;;AAWA,IAAMiB,SAAS;AACblC,QAAY,QADC;AAEbQ,cAAY;AACV2B,SAAUnC,KAAKK,IADL;AAEV+B,cAAUpC,KAAKK,IAFL;AAGVgC,YAAU;AACRrC,YAAa,OADL;AAERU,mBAAa,IAFL;AAGR4B,aAAaR;AAHL;AAHA,GAFC;AAWbb,wBAAsB;AAXT,CAAf;;AAcA,IAAMsB,SAAS;AACb/B,cAAY;AACVD,OADU;AAEVW,OAFU;AAGVgB,UAHU;AAIVK,YAAUvC,KAAKM,GAJL;AAKVkC,cAAUxC,KAAKM;AALL,GADC;AAQbW,wBAAsB;AART,CAAf;;AAWA,IAAMwB,MAAM,IAAIC,aAAJ,EAAZ;AACA,sBAAQD,GAAR;AACA,IAAME,WAAWF,IAAIG,OAAJ,CAAYL,MAAZ,CAAjB;;AAEA,IAAMM,kBAAkBC,UAAU;AAChC,MAAMC,QAAQJ,SAASG,MAAT,CAAd;AACA,MAAI,CAACC,KAAL,EAAY;AACVC,YAAQC,GAAR,CAAY,eAAZ;AACAN,aAASO,MAAT,CAAgBC,GAAhB,CAAoBC,QAApB;AACA,UAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AACD;AACF,CAPD;;AASA,IAAMC,SAAS,sBAAOC,QAAP,EAAiB,KAAjB,EAAwBP,OAAxB,CAAf;AACA,IAAMI,WAAWE,SACZE,GAAD,IAASR,QAAQS,GAAR,CAAaD,GAAb,EAAkB,EAAEE,QAAQ,IAAV,EAAlB,CADI,GAEZF,GAAD,IAASR,QAAQC,GAAR,CAAYO,GAAZ,CAFb;;kBAKeX,e","file":"config-validation.js","sourcesContent":["import Ajv from 'ajv'\nimport AjvKeys from 'ajv-keywords/keywords/typeof'\nimport propIs from 'ramda/src/propIs'\n\nconst type = {\n  func: { typeof: 'function' },\n  num : { type: 'number' },\n  str : { type: 'string' },\n  bool: { type: 'boolean' },\n  obj : { type: 'object' }\n}\n\nconst app = {\n  type      : 'object',\n  properties: {\n    publicKeys: {\n      type       : 'array',\n      uniqueItems: true,\n    },\n    storage: {\n      type      : 'object',\n      required  : ['get', 'set', 'remove', 'clear'],\n      properties: {\n        get   : type.func,\n        set   : type.func,\n        remove: type.func,\n        clear : type.func\n      },\n      additionalProperties: true\n    }\n  },\n  additionalProperties: false\n}\n\nconst api = {\n  type      : 'object',\n  required  : ['layer', 'api_id'],\n  properties: {\n    invokeWithLayer : type.num,\n    layer           : type.num,\n    flags           : type.num,\n    initConnection  : type.num,\n    api_id          : type.num,\n    device_model    : type.str,\n    system_version  : type.str,\n    app_version     : type.str,\n    system_lang_code: type.str,\n    lang_pack       : type.str,\n    lang_code       : type.str,\n  },\n  additionalProperties: false\n}\n\nconst dc = {\n  type      : 'object',\n  required  : ['id', 'host'],\n  properties: {\n    id  : type.num,\n    host: type.str,\n    port: type.num\n  },\n  additionalProperties: false\n}\n\nconst server = {\n  type      : 'object',\n  properties: {\n    dev     : type.bool,\n    webogram: type.bool,\n    dcList  : {\n      type       : 'array',\n      uniqueItems: true,\n      items      : dc\n    }\n  },\n  additionalProperties: false\n}\n\nconst schema = {\n  properties: {\n    app,\n    api,\n    server,\n    schema  : type.obj,\n    mtSchema: type.obj\n  },\n  additionalProperties: false\n}\n\nconst ajv = new Ajv()\nAjvKeys(ajv)\nconst validate = ajv.compile(schema)\n\nconst configValidator = config => {\n  const valid = validate(config)\n  if (!valid) {\n    console.log('config errors')\n    validate.errors.map(printObj)\n    throw new Error('wrong config fields')\n  }\n}\n\nconst canDir = propIs(Function, 'dir', console)\nconst printObj = canDir\n  ? (arg) => console.dir( arg, { colors: true })\n  : (arg) => console.log(arg)\n\n\nexport default configValidator\n"]}
>>>>>>> v2.2.2-fixed
