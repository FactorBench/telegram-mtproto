{"version":3,"sources":["../../../src/service/api-manager/request.js"],"names":["debug","Promise","config","monitoring","Request","constructor","method","params","initNetworker","console","log","dc","networker","getNetworker","netOpts","then","saveNetworker","resolve","performRequest","requestWith","dcID","wrapApiCall","catch","code","error303","error420","bind","err","Error","matched","type","match","length","reject","newDcID","waitTime","error"],"mappings":"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","file":"request.js","sourcesContent":["//@flow\n\nimport Promise from 'bluebird'\n\nimport Logger from '../../util/log'\nconst debug = Logger([`request`])\n\nimport { MTError } from '../../error'\nimport { delayedCall } from '../../util/smart-timeout'\nimport type { NetworkerType, AsyncStorage, LeftOptions } from './index.h.js'\n\ntype Options = {|\n  networker?: NetworkerType,\n  dc: number,\n  storage: AsyncStorage,\n  getNetworker: (dcID: number, options: LeftOptions) => Promise<NetworkerType>,\n  netOpts: mixed\n|}\n\nPromise.config({\n  monitoring: true\n})\n\nclass Request {\n  method: string\n  params: { [arg: string]: mixed }\n  config: Options\n  constructor(config: Options, method: string, params?: Object = {}) {\n    this.config = config\n    this.method = method\n    this.params = params\n\n    this.performRequest = this.performRequest.bind(this)\n    //$FlowIssue\n    this.error303 = this.error303.bind(this)\n    //$FlowIssue\n    this.error420 = this.error420.bind(this)\n    this.initNetworker = this.initNetworker.bind(this)\n  }\n\n  initNetworker = (): Promise<NetworkerType> => {\n    console.log('[InitNetworker] this.config.dc =', this.config.dc)\n    if (!this.config.networker) {\n      const { getNetworker, netOpts, dc } = this.config\n      console.log('[InitNetworker] this.config.dc =', this.config.dc)\n      return getNetworker(dc, netOpts)\n        .then(this.saveNetworker)\n    }\n    return Promise.resolve(this.config.networker)\n  }\n\n  saveNetworker = (networker: NetworkerType) => this.config.networker = networker\n  \n  performRequest = () => {\n    console.log('[PerformRequest] this.config.dc = ', this.config.dc)\n    return this.initNetworker().then(this.requestWith)\n  }\n  \n  requestWith = (networker: NetworkerType) => {\n    console.log('[RequestWith] this.config.dc = ', this.config.dc)\n    console.log('[RequestWith] this.config.netOpts = ', this.config.netOpts)\n    this.config.netOpts.dcID = this.config.dc\n    return networker\n    .wrapApiCall(this.method, this.params, this.config.netOpts)\n    .catch({ code: 303 }, this.error303)\n    .catch({ code: 420 }, this.error420)\n  }\n\n  error303(err: MTError) {\n    console.log('[Error303]', err)\n    console.log('[Error303]', err instanceof Error)\n    console.log('[Error303] this.config.dc =', this.config.dc)\n    const matched = err.type.match(/^(PHONE_MIGRATE_|NETWORK_MIGRATE_|USER_MIGRATE_)(\\d+)/)\n    if (!matched || matched.length < 2) return Promise.reject(err)\n    const [ , , newDcID] = matched\n    if (+newDcID === this.config.dc) return Promise.reject(err)\n    this.config.dc = +newDcID\n    delete this.config.networker\n    /*if (this.config.dc)\n      this.config.dc = newDcID\n    else\n      await this.config.storage.set('dc', newDcID)*/\n    //TODO There is disabled ability to change default DC\n    //NOTE Shouldn't we must reassign current networker/cachedNetworker?\n    console.log('[Error303] this.config.dc =', this.config.dc)\n    return this.performRequest()\n  }\n\n  error420(err: MTError) {\n    console.log('[Error420]', err)\n    console.log('[Error420]', err instanceof Error)\n    const matched = err.type.match(/^FLOOD_WAIT_(\\d+)/)\n    if (!matched || matched.length < 2) return Promise.reject(err)\n    const [ , waitTime ] = matched\n    console.error(`Flood error! It means that mtproto server bans you on ${waitTime} seconds`)\n    return +waitTime > 60\n      ? Promise.reject(err)\n      : delayedCall(this.performRequest, +waitTime * 1e3)\n  }\n}\n\nexport default Request"]}