{"version":3,"sources":["../../../src/service/api-manager/request.js"],"names":["debug","Promise","config","monitoring","Request","constructor","method","params","initNetworker","console","log","networker","getNetworker","netOpts","dc","dcID","then","saveNetworker","resolve","performRequest","requestWith","wrapApiCall","catch","code","error303","error420","bind","err","matched","type","match","length","reject","newDcID","storage","set","waitTime","error"],"mappings":"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","file":"request.js","sourcesContent":["//@flow\n\nimport Promise from 'bluebird'\n\nimport Logger from '../../util/log'\nconst debug = Logger([`request`])\n\nimport { MTError } from '../../error'\nimport { delayedCall } from '../../util/smart-timeout'\nimport type { NetworkerType, AsyncStorage, LeftOptions } from './index.h.js'\n\ntype Options = {|\n  networker?: NetworkerType,\n  dc: number,\n  storage: AsyncStorage,\n  getNetworker: (dcID: number, options: LeftOptions) => Promise<NetworkerType>,\n  netOpts: mixed\n|}\n\nPromise.config({\n  monitoring: true\n})\n\nclass Request {\n  method: string\n  params: { [arg: string]: mixed }\n  config: Options\n  constructor(config: Options, method: string, params?: Object = {}) {\n    this.config = config\n    this.method = method\n    this.params = params\n\n    this.performRequest = this.performRequest.bind(this)\n    //$FlowIssue\n    this.error303 = this.error303.bind(this)\n    //$FlowIssue\n    this.error420 = this.error420.bind(this)\n    this.initNetworker = this.initNetworker.bind(this)\n  }\n\n  initNetworker = (): Promise<NetworkerType> => {\n    console.log('[InitNetworker]', this.config)\n    if (!this.config.networker) {\n      const { getNetworker, netOpts, dc } = this.config\n      console.log('[InitNetworker] this.config.dc =', this.config.dc)\n      if (netOpts.dcID) netOpts.dcID = this.config.dc // todo hack... rewrite\n      return getNetworker(dc, netOpts)\n        .then(this.saveNetworker)\n    }\n    return Promise.resolve(this.config.networker)\n  }\n\n  saveNetworker = (networker: NetworkerType) => this.config.networker = networker\n  \n  performRequest = () => {\n    console.log('[PerformRequest] this.config.dc = ', this.config.dc)\n    return this.initNetworker().then(this.requestWith)\n  }\n  \n  requestWith = (networker: NetworkerType) => {\n    console.log('[RequestWith] this.config.dc = ', this.config.dc)\n    console.log('[RequestWith] this.config.netOpts = ', this.config.netOpts)\n    this.config.netOpts.dcID = this.config.dc\n    return networker\n    .wrapApiCall(this.method, this.params, this.config.netOpts)\n    .catch({ code: 303 }, this.error303)\n    .catch({ code: 420 }, this.error420)\n  }\n\n  error303(err: MTError) {\n    console.log('[Error303]', err)\n    console.log('[Error303] on enter this.config.dc =', this.config.dc)\n    const matched = err.type.match(/^(PHONE_MIGRATE_|NETWORK_MIGRATE_|USER_MIGRATE_)(\\d+)/)\n    if (!matched || matched.length < 2) return Promise.reject(err)\n    const [ , , newDcID] = matched\n    if (+newDcID === this.config.dc) return Promise.reject(err)\n    this.config.dc = +newDcID\n    delete this.config.networker\n    /* if (this.config.dc)\n      this.config.dc = newDcID\n    else */\n    this.config.storage.set('dc', this.config.dc)\n    //TODO There is disabled ability to change default DC\n    //NOTE Shouldn't we must reassign current networker/cachedNetworker?\n    console.log('[Error303] on exit this.config.dc =', this.config.dc)\n    return this.performRequest()\n  }\n\n  error420(err: MTError) {\n    console.log('[Error420]', err)\n    const matched = err.type.match(/^FLOOD_WAIT_(\\d+)/)\n    if (!matched || matched.length < 2) return Promise.reject(err)\n    const [ , waitTime ] = matched\n    console.error(`Flood error! It means that mtproto server bans you on ${waitTime} seconds`)\n    return +waitTime > 60\n      ? Promise.reject(err)\n      : delayedCall(this.performRequest, +waitTime * 1e3)\n  }\n}\n\nexport default Request"]}