{"version":3,"sources":["../../../src/service/api-manager/request.js"],"names":["debug","Promise","config","monitoring","Request","constructor","method","params","initNetworker","console","log","networker","dcID","dc","getNetworker","netOpts","then","saveNetworker","resolve","performRequest","requestWith","wrapApiCall","catch","code","error303","error420","bind","err","matched","type","match","length","reject","newDcID","storage","set","fixupDc","waitTime","error"],"mappings":"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","file":"request.js","sourcesContent":["//@flow\n\nimport Promise from 'bluebird'\n\nimport Logger from '../../util/log'\nconst debug = Logger([`request`])\n\nimport { MTError } from '../../error'\nimport { delayedCall } from '../../util/smart-timeout'\nimport type { NetworkerType, AsyncStorage, LeftOptions } from './index.h.js'\n\ntype Options = {|\n  networker?: NetworkerType,\n  dc: number,\n  storage: AsyncStorage,\n  getNetworker: (dcID: number, options: LeftOptions) => Promise<NetworkerType>,\n  netOpts: mixed\n|}\n\nPromise.config({\n  monitoring: true\n})\n\nclass Request {\n  method: string\n  params: { [arg: string]: mixed }\n  config: Options\n  constructor(config: Options, method: string, params?: Object = {}) {\n    this.config = config\n    this.method = method\n    this.params = params\n\n    this.performRequest = this.performRequest.bind(this)\n    //$FlowIssue\n    this.error303 = this.error303.bind(this)\n    //$FlowIssue\n    this.error420 = this.error420.bind(this)\n    this.initNetworker = this.initNetworker.bind(this)\n  }\n\n  initNetworker = (): Promise<NetworkerType> => {\n    console.log('[initNetworker:0]', this.config)\n    if (!this.config.networker || this.config.networker.dcID != this.config.dc) {\n      const { getNetworker, netOpts, dc } = this.config\n      console.log('[initNetworker:1] this.config.dc =', this.config.dc)\n      if (netOpts.dcID) netOpts.dcID = this.config.dc // todo hack... rewrite\n\n      return getNetworker(dc, netOpts)\n        .then(this.saveNetworker)\n    }\n\n    return Promise.resolve(this.config.networker)\n  }\n\n  saveNetworker = (networker: NetworkerType) => this.config.networker = networker\n  \n  performRequest = () => {\n    console.log('[PerformRequest] this.config.dc = ', this.config.dc)\n    return this.initNetworker().then(this.requestWith)\n  }\n  \n  requestWith = (networker: NetworkerType) => {\n    console.log('[RequestWith] this.config.dc = ', this.config.dc)\n    console.log('[RequestWith] this.config.netOpts = ', this.config.netOpts)\n    this.config.netOpts.dcID = this.config.dc\n    return networker\n      .wrapApiCall(this.method, this.params, this.config.netOpts)\n      .catch({ code: 303 }, this.error303)\n      .catch({ code: 420 }, this.error420)\n  }\n\n  /*\nif (error.code == 303) {\n              var newDcID = error.type.match(/^(PHONE_MIGRATE_|NETWORK_MIGRATE_|USER_MIGRATE_)(\\d+)/)[2]\n              if (newDcID != dcID) {\n                if (options.dcID) {\n                  options.dcID = newDcID\n                } else {\n                  Storage.set({dc: baseDcID = newDcID})\n                }\n\n                mtpGetNetworker(newDcID, options).then(function (networker) {\n                  networker.wrapApiCall(method, params, options).then(function (result) {\n                    deferred.resolve(result)\n                  }, rejectPromise)\n                }, rejectPromise)\n              }\n            }\n  */\n  error303(err: MTError) {\n    console.log('[Error303]', err)\n    console.log('[Error303] on enter this.config.dc =', this.config.dc)\n    const matched = err.type.match(/^(PHONE_MIGRATE_|NETWORK_MIGRATE_|USER_MIGRATE_)(\\d+)/)\n    if (!matched || matched.length < 2) return Promise.reject(err)\n    const newDcID = +matched[2]\n    if (newDcID === this.config.dc) return Promise.reject(err)\n    this.config.dc = newDcID\n    //delete this.config.networker\n    this.config.storage.set('dc', this.config.dc) // must be async call\n    if (this.config.fixupDc) this.config.fixupDc(newDcID)\n    console.log('[Error303] on exit this.config.dc =', this.config.dc)\n    return this.performRequest()\n  }\n\n  error420(err: MTError) {\n    console.log('[Error420]', err)\n    const matched = err.type.match(/^FLOOD_WAIT_(\\d+)/)\n    if (!matched || matched.length < 2) return Promise.reject(err)\n    const [ , waitTime ] = matched\n    console.error(`Flood error! It means that mtproto server bans you on ${waitTime} seconds`)\n    return +waitTime > 60\n      ? Promise.reject(err)\n      : delayedCall(this.performRequest, +waitTime * 1e3)\n  }\n}\n\nexport default Request"]}