{"version":3,"sources":["../../../src/service/api-manager/index.js"],"names":["debug","Logger","hasPath","isNil","Ln","length","obj","ApiManager","constructor","config","tls","netFabric","on","emit","cache","uploader","downloader","auth","servers","keysParsed","fixupDc","dcID","console","log","baseDcID","options","txn","JSON","stringify","inProgress","nearestDc","resolve","reject","err","once","opts","createNetworker","networker","mtpGetNetworker","wrapApiCall","nearest_dc","Promise","getNearestDc","networkSetter","dc","authKey","serverSalt","networkFabric","fileUpload","fileDownload","Error","isUpload","undefined","akk","ssk","authKeyHex","storage","get","serverSaltHex","AuthKeyError","dcUrl","chooseServer","error","netError","set","method","params","deferred","data","_","flags","user","Object","keys","setUserAuth","id","processResult","rejectPromise","type","input","message","noErrorBox","initConnection","requestThunk","req","performRequest","waitTime","cfg","getNetworker","netOpts","Request","then","deferResolve","apiSavedNet","apiRecall","code","mtpInvokeApi","catch","promise","userAuth","fullUserAuth","server","api","app","publicKeys","schema","mtSchema","apiConfig","serverConfig","TL","keyManager","Serialization","bind","apiManager","requestPulls","requestActives","existsNetworkers","isAnyNetworker","storedBaseDc","baseDc","this_dc","mtpClearStorage","saveKeys","push","noPrefix","values","clear","restoreObj","forEach","key","i","value","ctx","stack"],"mappings":"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","file":"index.js","sourcesContent":["//@flow\n\nimport Promise from 'bluebird'\n// import UpdatesManager from '../updates'\n\nimport isNil from 'ramda/src/isNil'\nimport is from 'ramda/src/is'\nimport propEq from 'ramda/src/propEq'\nimport has from 'ramda/src/has'\nimport pathSatisfies from 'ramda/src/pathSatisfies'\nimport complement from 'ramda/src/complement'\n\nimport Logger from '../../util/log'\nconst debug = Logger`api-manager`\n\nimport Auth from '../authorizer'\nimport type { Args } from '../authorizer'\n\nimport blueDefer from '../../util/defer'\nimport { dTime } from '../time-manager'\nimport { chooseServer } from '../dc-configurator'\n\nimport KeyManager from '../rsa-keys-manger'\nimport { AuthKeyError } from '../../error'\n\nimport { bytesFromHex, bytesToHex } from '../../bin'\n\nimport type { TLFabric } from '../../tl'\nimport type { TLSchema } from '../../tl/index.h'\nimport { switchErrors } from './error-cases'\nimport { delayedCall } from '../../util/smart-timeout'\n\nimport Request from './request'\n\nimport type { Bytes, PublicKey, LeftOptions, AsyncStorage, Cache } from './index.h'\n\nimport type { ApiConfig, StrictConfig } from '../main/index.h'\n\nimport type { Networker } from '../networker'\n\nimport type { Emit, On } from '../main/index.h'\n\nconst hasPath = pathSatisfies( complement( isNil ) )\n\nconst Ln = (length, obj) => obj && propEq('length', length, obj)\n\nexport class ApiManager {\n  cache: Cache = {\n    uploader  : {},\n    downloader: {},\n    auth      : {},\n    servers   : {},\n    keysParsed: {}\n  }\n  apiConfig: ApiConfig\n  publicKeys: PublicKey[]\n  storage: AsyncStorage\n  TL: TLFabric\n  serverConfig: {}\n  schema: TLSchema\n  mtSchema: TLSchema\n  keyManager: Args\n  networkFabric: any\n  updatesManager: any\n  auth: any\n  on: On\n  emit: Emit\n  chooseServer: (dcID: number, upload?: boolean) => {}\n  constructor(config: StrictConfig, tls: TLFabric, netFabric: Function, { on, emit }: { on: On, emit: Emit }) {\n    const {\n      server,\n      api,\n      app: {\n        storage,\n        publicKeys\n      },\n      schema,\n      mtSchema\n    } = config\n    this.apiConfig = api\n    this.publicKeys = publicKeys\n    this.storage = storage\n    this.serverConfig = server\n    this.schema = schema\n    this.mtSchema = mtSchema\n    this.chooseServer = chooseServer(this.cache.servers, server)\n    this.on = on\n    this.emit = emit\n    this.TL = tls\n    this.keyManager = KeyManager(this.TL.Serialization, publicKeys, this.cache.keysParsed)\n    this.auth = Auth(this.TL, this.keyManager)\n    this.networkFabric = netFabric(this.chooseServer)\n    this.mtpInvokeApi = this.mtpInvokeApi.bind(this)\n    this.mtpGetNetworker = this.mtpGetNetworker.bind(this)\n    const apiManager = this.mtpInvokeApi\n    apiManager.setUserAuth = this.setUserAuth\n    apiManager.on = this.on\n    apiManager.emit = this.emit\n    apiManager.storage = storage\n    this.requestPulls = {}\n    this.requestActives = {}\n    this.baseDcID = false\n    this.nearestDc = false\n    this.txn = 1\n\n    // this.updatesManager = UpdatesManager(apiManager)\n    // apiManager.updates = this.updatesManager\n\n    return apiManager\n  }\n  \n  fixupDc = (dcID) => {\n    console.log('[fixupDc] current:', this.baseDcID, 'candidate:', dcID)\n    this.baseDcID = dcID\n  }\n\n  getNearestDc = async (options) => {\n    console.log(dTime(), `[${options.txn}][getNearestDc:0]`, JSON.stringify(options))\n    let inProgress = false\n\n    if (this.nearestDc) return this.nearestDc\n\n    return new Promise(async (resolve, reject) => {\n      if (inProgress) {\n        console.log(dTime(), `[${options.txn}][getNearestDc] wait...`)\n        this.once('gotNearestDc', (nearestDc) => {\n          inProgress = false\n          console.log(dTime(), `[${options.txn}][getNearestDc] got:`, nearestDc)\n          resolve(nearestDc)\n        })\n\n        this.once('error', (err) => {\n          inProgress = false\n          console.log(dTime(), `[${options.txn}][getNearestDc] error:`, JSON.stringify(err))\n          reject(false)\n        })\n      } else {\n        console.log(dTime(), `[${options.txn}][getNearestDc] request nearest dc`)\n        inProgress = true\n\n        const opts = {\n          txn: options.txn,\n          dcID: options.dcID || 2,\n          createNetworker: true\n        }\n\n        const networker = await this.mtpGetNetworker(opts.dcID, opts)\n        const nearestDc = await networker.wrapApiCall('help.getNearestDc', {}, opts)\n        const { nearest_dc } = nearestDc\n        console.log(dTime(), `[${options.txn}][getNearestDc] got it: ${nearest_dc}`)\n        this.emit('gotNearestDc', nearest_dc)\n      }\n    })\n  }\n\n  networkSetter = (dc: number, options: LeftOptions) =>\n    (authKey: Bytes, serverSalt: Bytes): Networker => {\n      console.log('[networkSetter] options:', JSON.stringify(options))\n      const networker = this.networkFabric(dc, authKey, serverSalt, options),\n        cache = (options.fileUpload || options.fileDownload)\n                ? this.cache.uploader\n                : this.cache.downloader\n\n      return cache[dc] = networker\n    }\n  mtpGetNetworker = async (dcID: number, options: LeftOptions = {}) => {\n    if (!dcID) throw new Error('get Networker without dcID')\n\n    const isUpload = options.fileUpload || options.fileDownload || false\n    const cache = isUpload ? this.cache.uploader : this.cache.downloader\n    //const cache = this.cache.downloader\n    console.log(dTime(), `[${options.txn}][MtpGetNetworker:0] dcID:`, dcID, JSON.stringify(options), isUpload)\n    console.log(dTime(), `[${options.txn}][MtpGetNetworker:1] cache:`, cache[dcID])\n    if (cache[dcID] !== undefined) return cache[dcID]\n\n    const networkSetter = this.networkSetter(dcID, options)\n\n    const akk = `dc${dcID}_auth_key`\n    const ssk = `dc${dcID}_server_salt`\n\n    const authKeyHex = await this.storage.get(akk)\n    let serverSaltHex = await this.storage.get(ssk)\n\n    if (cache[dcID]) return cache[dcID]\n\n    if (authKeyHex && authKeyHex.length == 512) {\n      if (!serverSaltHex || serverSaltHex.length != 16) {\n        serverSaltHex = 'AAAAAAAAAAAAAAAA'\n      }\n      const authKey = bytesFromHex(authKeyHex)\n      const serverSalt = bytesFromHex(serverSaltHex)\n\n      console.log(dTime(), `[${options.txn}][MtpGetNetworker:2] call network fabric:`, dcID, authKey, serverSalt, JSON.stringify(options))\n      return cache[dcID] = this.networkFabric(dcID, authKey, serverSalt, options)\n      //return networkSetter(authKey, serverSalt)\n    }\n\n    if (!options.createNetworker) throw new AuthKeyError()\n\n    console.log(dTime(), `[${options.txn}][MtpGetNetworker:3] auth...`)\n    let auth\n    try {\n      const dcUrl = this.chooseServer(dcID, options.fileDownload || options.fileUpload)\n      console.log(dTime(), `[${options.txn}][MtpGetNetworker:4] dcUrl:`, dcUrl)\n      auth = await this.auth(dcID, this.cache.auth, dcUrl)\n      console.log(dTime(), `[${options.txn}][MtpGetNetworker:5] auth completed:`, auth)\n      this.baseDcID = dcID\n    } catch (error) {\n      return netError(error)\n    }\n    console.log(dTime(), `[${options.txn}][MtpGetNetworker:6] auth passed`)\n\n    const { authKey, serverSalt } = auth\n\n    await this.storage.set(akk, bytesToHex(authKey))\n    await this.storage.set(ssk, bytesToHex(serverSalt))\n\n    //return networkSetter(authKey, serverSalt)\n    console.log(dTime(), `[${options.txn}][MtpGetNetworker:7] call network fabric:`, dcID, authKey, serverSalt, JSON.stringify(options))\n    return cache[dcID] = this.networkFabric(dcID, authKey, serverSalt, options)\n  }\n  async initConnection(options) {\n    const existsNetworkers = isAnyNetworker(this)\n    console.log(dTime(), `[${options.txn}][initConnection] check exists any networker:`, existsNetworkers, Object.keys(this.cache.downloader))\n    if (!existsNetworkers) {\n      const storedBaseDc = await this.storage.get('dc')\n      console.log(dTime(), `[${options.txn}][initConnection] got dc: ${storedBaseDc}, default: ${this.baseDcID}`)\n      const baseDc = storedBaseDc || this.baseDcID\n      const opts = {\n        txn: options.txn,\n        dcID: baseDc,\n        createNetworker: true\n      }\n      const networker = await this.mtpGetNetworker(1, opts)\n      const nearestDc = await networker.wrapApiCall('help.getNearestDc', {}, opts)\n      const { nearest_dc, this_dc } = nearestDc\n      console.log(dTime(), `[${options.txn}][initConnection] help.getNearestDc: ${nearest_dc}, ${this_dc}`)\n      //await this.storage.set('dc', nearest_dc)\n      //this.baseDcID = nearest_dc\n      debug(`nearest Dc`)('%O', nearestDc)\n      console.log(dTime(), `[${options.txn}][initConnection] is nearest is not this: ${nearest_dc !== this_dc}`)\n      if (nearest_dc !== this_dc) {\n        console.log(dTime(), `[${options.txn}][initConnection] if nearest_dc!=this_dc then create networker for dcID ${nearest_dc}`)\n        await this.mtpGetNetworker(nearest_dc, { txn: options.txn, createNetworker: true })\n      }\n    }\n  }\n  mtpInvokeApi = async (method: string, params: Object, options: LeftOptions = {}) => {\n    const deferred = blueDefer()\n    const processResult = async (data) => {\n      if (data._ == 'auth.authorization' && data.flags >= 0 && data.user\n        && Object.keys(data).length == 3)\n      {\n        await this.setUserAuth(dcID, { id: data.user.id })\n      }\n      console.log(dTime(), `[${options.txn}][mtpInvokeApi:5] returned by ${method}: ${JSON.stringify(data)}`)\n      return deferred.resolve(data)\n    }\n    const rejectPromise = (error: any) => {\n      let err\n      if (!error)\n        err = { type: 'ERROR_EMPTY', input: '' }\n      else if (!is(Object, error))\n        err = { message: error }\n      else err = error\n      deferred.reject(err)\n\n      if (!options.noErrorBox) {\n        //TODO weird code. `error` changed after `.reject`?\n\n        /*err.input = method\n\n        err.stack =\n          stack ||\n          hasPath(['originalError', 'stack'], error) ||\n          error.stack ||\n          (new Error()).stack*/\n        this.emit('error.invoke', error)\n      }\n    }\n    \n    options.txn = this.txn++\n    console.log(dTime(), `[${options.txn}][mtpInvokeApi:0]`, method, JSON.stringify(params), JSON.stringify(options))\n    if (!options.dcID) options.dcID = await this.storage.get('dc') || this.baseDcID\n    console.log(dTime(), `[${options.txn}][mtpInvokeApi:1] initConnection...`)\n    await this.initConnection(options)\n    console.log(dTime(), `[${options.txn}][mtpInvokeApi:2] initConnection passed`)\n\n    const requestThunk = waitTime => delayedCall(req.performRequest, +waitTime * 1e3)\n\n    const dcID = options.dcID\n      ? options.dcID || this.baseDcID\n      : await this.storage.get('dc') || 2\n\n    console.log(dTime(), `[${options.txn}][mtpInvokeApi:3] get networker with dcID ${dcID} and options ${JSON.stringify(options)}`)\n    const networker = await this.mtpGetNetworker(dcID, options)\n    console.log(dTime(), `[${options.txn}][mtpInvokeApi:4] got networker:`, networker)\n\n    const cfg = {\n      networker,\n      dc          : dcID,\n      storage     : this.storage,\n      getNetworker: this.mtpGetNetworker,\n      netOpts     : options,\n      fixupDc: this.fixupDc\n    }\n    const req = new Request(cfg, method, params)\n\n    req.performRequest()\n      .then(\n        processResult/* deferred.resolve */,\n        error => {\n          const deferResolve = processResult/* deferred.resolve */\n          const apiSavedNet = () => networker\n          const apiRecall = networker => {\n            req.config.networker = networker\n            return req.performRequest()\n          }\n          console.error(dTime(), `[${options.txn}] Error`, error.code, error.type, this.baseDcID, dcID)\n\n          return switchErrors(error, options, dcID, this.baseDcID)(\n            error, options, dcID, this.emit, rejectPromise, requestThunk,\n            apiSavedNet, apiRecall, deferResolve, this.mtpInvokeApi,\n            this.storage)\n        }\n      )\n      .catch(rejectPromise)\n\n    return deferred.promise\n  }\n\n  setUserAuth = async (dcID: number, userAuth: any) => {\n    const fullUserAuth = { dcID, ...userAuth }\n    console.log(dTime(), `[setUserAuth] store user auth:`, fullUserAuth)\n    await this.storage.set('dc', dcID)\n    await this.storage.set('user_auth', fullUserAuth)\n    this.emit('auth.dc', { dc: dcID, auth: userAuth })\n    this.baseDcID = dcID\n  }\n  async mtpClearStorage() {\n    const saveKeys = []\n    for (let dcID = 1; dcID <= 5; dcID++) {\n      saveKeys.push(`dc${  dcID  }_auth_key`)\n      saveKeys.push(`t_dc${  dcID  }_auth_key`)\n    }\n    this.storage.noPrefix() //TODO Remove noPrefix\n\n    const values = await this.storage.get(...saveKeys)\n\n    await this.storage.clear()\n\n    const restoreObj = {}\n    saveKeys.forEach((key, i) => {\n      const value = values[i]\n      if (value !== false && value !== undefined)\n        restoreObj[key] = value\n    })\n    this.storage.noPrefix()\n\n    return this.storage.set(restoreObj) //TODO definitely broken\n  }\n}\n\nconst isAnyNetworker = (ctx: ApiManager) => Object.keys(ctx.cache.downloader).length > 0\n\nconst netError = error => {\n  console.log('Get networker error', error, error.stack)\n  return Promise.reject(error)\n}\n"]}