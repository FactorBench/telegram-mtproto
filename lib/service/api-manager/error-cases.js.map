{"version":3,"sources":["../../../src/service/api-manager/error-cases.js"],"names":["cachedExportPromise","protect","code","NaN","type","rawError","dcID","baseDcID","base","errR","patterns","noBaseAuth","noDcAuth","waitFail","fileMigrate","slice","_","matchProtect","matched","error","options","emit","rejectPromise","requestThunk","apiSavedNet","apiRecall","deferResolve","mtpInvokeApi","storage","invoke","throwNext","reject","remove","importAuth","id","bytes","noErrorBox","exportDeferred","dc_id","then","resolve","catch","promise","now","stopTime","waitTime","Math","min","def","switchErrors"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,sBAAsB,EAA5B;;AAEA,IAAMC,UAAU,CACZ,EAAEC,OAAOC,GAAT,EAAcC,OAAO,EAArB,EADY,EAEZ,EAAEC,WAAW,IAAb,EAFY,EAGZC,IAHY,EAIZC,QAJY,MAKR;AACJC,QAAMD,QADF;AAEJE,QAAMJ,QAFF;AAGJH,MAHI;AAIJE,MAJI;AAKJE;AALI,CALQ,CAAhB;;AAaA,IAAMI,WAAW;AACfC,cAAY,CAAC,EAAET,IAAF,EAAQI,IAAR,EAAcE,IAAd,EAAoBJ,IAApB,EAAD,KAAkCF,SAAS,GAAT,IAAgBI,SAASE,IAAzB,IAAiCJ,SAAS,yBADzE;AAEfQ,YAAU,CAAC,EAAEV,IAAF,EAAQI,IAAR,EAAcE,IAAd,EAAoBJ,IAApB,EAAD,KAAkCF,SAAS,GAAT,IAAgBI,SAASE,IAFtD,EAE2D;AAC1EK,YAAU,CAAC,EAAEX,IAAF,EAAQE,IAAR,EAAcK,IAAd,EAAD,KAA4B,CAACA,IAAD,KAAUP,SAAS,GAAT,IAAgBE,SAAS,iBAAnC,CAHvB;AAIfU,eAAa,CAAC,EAAEZ,IAAF,EAAQE,IAAR,EAAD,KAAoBF,SAAS,GAAT,IAAgBE,KAAKW,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,MAAsB,eAJxD;AAKfC,KAAI,MAAM;AALK,CAAjB;;AASA,IAAMC,eACJC,WAAW,CACPC,KADO,EAEPC,OAFO,EAGPd,IAHO,EAIPe,IAJO,EAKPC,aALO,EAMPC,YANO,EAOPC,WAPO,EAQPC,SARO,EASPC,YATO,EAUPC,YAVO,EAWPC,OAXO,KAaPV,QAAQ;AACNW,UAAWF,YADL;AAENG,aAAW,MAAMR,cAAcH,KAAd,CAFX;AAGNY,UAAWT,aAHL;AAINF,SAJM;AAKNd,MALM;AAMNe,MANM;AAONE,cAPM;AAQNE,WARM;AASNC,cATM;AAUNF,aAVM;AAWNI;AAXM,CAAR,CAdN;;AA6BA,IAAMjB,aAAa,CAAC,EAAEU,IAAF,EAAQS,SAAR,EAAmBF,OAAnB,EAAD,KAAkC;AACnDA,UAAQI,MAAR,CAAe,IAAf,EAAqB,WAArB;AACAX,OAAK,gBAAL;AACAS;AACD,CAJD;;AAMA,IAAMlB,WAAW,CAAC,EAAEN,IAAF,EAAQyB,MAAR,EAAgBP,WAAhB,EAA6BC,SAA7B,EAAwCC,YAAxC,EAAsDG,MAAtD,EAAD,KAAoE;AACnF,MAAMI,aAAa,CAAC,EAAEC,EAAF,EAAMC,KAAN,EAAD,KAAmBN,OACpC,0BADoC,EAEpC,EAAEK,EAAF,EAAMC,KAAN,EAFoC,EAGpC,EAAE7B,IAAF,EAAQ8B,YAAY,IAApB,EAHoC,CAAtC;;AAKA,MAAI,qBAAMpC,oBAAoBM,IAApB,CAAN,CAAJ,EAAsC;AACpC,QAAM+B,iBAAiB,sBAAvB;;AAEAR,WAAO,0BAAP,EAAmC,EAAES,OAAOhC,IAAT,EAAnC,EAAoD,EAAE8B,YAAY,IAAd,EAApD,EACGG,IADH,CACQN,UADR,EAEGM,IAFH,CAEQF,eAAeG,OAFvB,EAGGC,KAHH,CAGSJ,eAAeN,MAHxB;;AAKA/B,wBAAoBM,IAApB,IAA4B+B,eAAeK,OAA3C;AACD;;AAED1C,sBAAoBM,IAApB,EAA0B;AAA1B,GACGiC,IADH,CACQf,WADR,EAEGe,IAFH,CAEQd,SAFR,EAGGc,IAHH,CAGQb,YAHR,EAIGe,KAJH,CAISV,MAJT;AAKD,CAtBD;;AAwBA,IAAMjB,cAAc,MAAM,CAEzB,CAFD;AAGA;;;;;;;;;;;;;;;;;AAiBA;;;;;;;AAOA,IAAMD,WAAW,CAAC,EAAEO,OAAF,EAAWU,SAAX,EAAsBP,YAAtB,EAAD,KAA0C;AACzD,MAAMoB,MAAM,yBAAZ;AACA,MAAIvB,QAAQwB,QAAZ,EAAsB;AACpB,QAAID,OAAOvB,QAAQwB,QAAnB,EACE,OAAOd,WAAP;AACH,GAHD,MAIEV,QAAQwB,QAAR,GAAmBD,MAAM,sBAAO,EAAP,EAAW,SAAX,EAAsBvB,OAAtB,IAAiC,IAA1D;AACFA,UAAQyB,QAAR,GAAmBzB,QAAQyB,QAAR,GACfC,KAAKC,GAAL,CAAS,EAAT,EAAa3B,QAAQyB,QAAR,GAAmB,GAAhC,CADe,GAEf,CAFJ;AAGAtB,eAAaH,QAAQyB,QAArB;AACD,CAXD;;AAaA,IAAMG,MAAM,CAAC,EAAElB,SAAF,EAAD,KAAmBA,WAA/B;;AAGO,IAAMmB,sCAAe,sBAAOvC,QAAP,EAAiBT,OAAjB,EAA0B;AACpDU,YADoD;AAEpDC,UAFoD;AAGpDC,UAHoD;AAIpDG,KAAGgC;AAJiD,CAA1B,EAKzB/B,YALyB,CAArB","file":"error-cases.js","sourcesContent":["import isNil from 'ramda/src/isNil'\nimport propOr from 'ramda/src/propOr'\n\nimport blueDefer from '../../util/defer'\nimport Switch from '../../util/switch'\nimport { tsNow } from '../time-manager'\n\nconst cachedExportPromise = {}\n\nconst protect = (\n    { code = NaN, type = '' },\n    { rawError = null },\n    dcID,\n    baseDcID\n  ) => ({\n    base: baseDcID,\n    errR: rawError,\n    code,\n    type,\n    dcID\n  })\n\nconst patterns = {\n  noBaseAuth: ({ code, dcID, base, type })  =>  code === 401 && dcID === base && type !== 'SESSION_PASSWORD_NEEDED',\n  noDcAuth: ({ code, dcID, base, type })  =>  code === 401 && dcID !== base,// && type === 'AUTH_KEY_UNREGISTERED',\n  waitFail: ({ code, type, errR })  =>  !errR && (code === 500 || type === 'MSG_WAIT_FAILED'),\n  fileMigrate: ({ code, type }) => code === 303 && type.slice(0, -1) === 'FILE_MIGRATE_',\n  _ : () => true\n}\n\n\nconst matchProtect =\n  matched => (\n      error,\n      options,\n      dcID,\n      emit,\n      rejectPromise,\n      requestThunk,\n      apiSavedNet,\n      apiRecall,\n      deferResolve,\n      mtpInvokeApi,\n      storage\n    ) =>\n      matched({\n        invoke   : mtpInvokeApi,\n        throwNext: () => rejectPromise(error),\n        reject   : rejectPromise,\n        options,\n        dcID,\n        emit,\n        requestThunk,\n        apiRecall,\n        deferResolve,\n        apiSavedNet,\n        storage\n      })\n\n\nconst noBaseAuth = ({ emit, throwNext, storage }) => {\n  storage.remove('dc', 'user_auth')\n  emit('error.401.base')\n  throwNext()\n}\n\nconst noDcAuth = ({ dcID, reject, apiSavedNet, apiRecall, deferResolve, invoke }) => {\n  const importAuth = ({ id, bytes }) => invoke(\n    'auth.importAuthorization',\n    { id, bytes },\n    { dcID, noErrorBox: true })\n\n  if (isNil(cachedExportPromise[dcID])) {\n    const exportDeferred = blueDefer()\n\n    invoke('auth.exportAuthorization', { dc_id: dcID }, { noErrorBox: true })\n      .then(importAuth)\n      .then(exportDeferred.resolve)\n      .catch(exportDeferred.reject)\n\n    cachedExportPromise[dcID] = exportDeferred.promise\n  }\n\n  cachedExportPromise[dcID] //TODO not returning promise\n    .then(apiSavedNet)\n    .then(apiRecall)\n    .then(deferResolve)\n    .catch(reject)\n}\n\nconst fileMigrate = () => {\n\n}\n/*\nconst migrate = ({ error, dcID, options, reject,\n    apiRecall, deferResolve, getNet, storage\n  }) => {\n  const newDcID = error.type.match(/^(PHONE_MIGRATE_|NETWORK_MIGRATE_|USER_MIGRATE_)(\\d+)/)[2]\n  if (newDcID === dcID) return\n  if (options.dcID)\n    options.dcID = newDcID\n  else\n    storage.set('dc', newDcID)\n\n  getNet(newDcID, options)\n    .then(apiRecall)\n    .then(deferResolve)\n    .catch(reject)\n}*/\n\n/*const floodWait = ({ error, options, throwNext, requestThunk }) => {\n  const waitTime = error.type.match(/^FLOOD_WAIT_(\\d+)/)[1] || 10\n  if (waitTime > (options.timeout || 60))\n    return throwNext()\n  requestThunk(waitTime)\n}*/\n\nconst waitFail = ({ options, throwNext, requestThunk }) => {\n  const now = tsNow()\n  if (options.stopTime) {\n    if (now >= options.stopTime)\n      return throwNext()\n  } else\n    options.stopTime = now + propOr(10, 'timeout', options) * 1000\n  options.waitTime = options.waitTime\n    ? Math.min(60, options.waitTime * 1.5)\n    : 1\n  requestThunk(options.waitTime)\n}\n\nconst def = ({ throwNext }) => throwNext()\n\n\nexport const switchErrors = Switch(patterns, protect)({\n  noBaseAuth,\n  noDcAuth,\n  waitFail,\n  _: def\n}, matchProtect)"]}